/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.View.users;


import com.DB.UserDB;
import com.Objects.Users;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diego
 */
public class UsersManagement extends javax.swing.JInternalFrame {

    /**
     * Creates new form UsersNew
     */
    public UsersManagement() {
        initComponents();
        listUsers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textUserID = new javax.swing.JTextField();
        textUserName = new javax.swing.JTextField();
        textUserPassword = new javax.swing.JPasswordField();
        textUserCheckPassword = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        btnUserRegister = new javax.swing.JButton();
        btnUserUpdate = new javax.swing.JButton();
        btnUserDelete = new javax.swing.JButton();
        BtnUserRefresh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableUserList = new javax.swing.JTable();
        btnUserLoad = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setClosable(true);
        setIconifiable(true);
        setTitle("Users");

        jLabel1.setText("ID");

        jLabel2.setText("User *");

        jLabel3.setText("Password *");

        jLabel4.setText("Confirm Password *");

        textUserID.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnUserRegister.setText("Register");
        btnUserRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserRegisterActionPerformed(evt);
            }
        });

        btnUserUpdate.setText("Update");
        btnUserUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserUpdateActionPerformed(evt);
            }
        });

        btnUserDelete.setText("Delete");
        btnUserDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserDeleteActionPerformed(evt);
            }
        });

        BtnUserRefresh.setText("Refresh");
        BtnUserRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUserRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUserRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUserUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUserDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnUserRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUserUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnUserRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUserRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUserDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tableUserList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User Name", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableUserList);
        if (tableUserList.getColumnModel().getColumnCount() > 0) {
            tableUserList.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        btnUserLoad.setText("Load Informations");
        btnUserLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUserLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(textUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(102, 102, 102)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(textUserCheckPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textUserCheckPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUserLoad)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        setBounds(0, 0, 542, 474);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUserRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserRegisterActionPerformed
        String password = String.valueOf(textUserPassword.getPassword());
            String passwordCheck = String.valueOf(textUserCheckPassword.getPassword());
            
        if(textUserName.getText().equals("")){
            JOptionPane.showMessageDialog(null, "User name is a mandatory field.");
        }else if(password.equals("")){
           JOptionPane.showMessageDialog(null, "Password is a mandatory field.");
        }else if(passwordCheck.equals("")){
            JOptionPane.showMessageDialog(null, "Confirm Password is a mandatory field.");
        }else{userRegister();}
        

    }//GEN-LAST:event_btnUserRegisterActionPerformed

    private void BtnUserRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUserRefreshActionPerformed
        cleanFields();
        listUsers();
    }//GEN-LAST:event_BtnUserRefreshActionPerformed

    private void btnUserUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserUpdateActionPerformed
        updateUsers();
    }//GEN-LAST:event_btnUserUpdateActionPerformed

    private void btnUserDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserDeleteActionPerformed
        deleteUser();
    }//GEN-LAST:event_btnUserDeleteActionPerformed

    private void btnUserLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserLoadActionPerformed
        loadUser();
    }//GEN-LAST:event_btnUserLoadActionPerformed
    
    private void userRegister(){
        
        try{
            Users user = new Users();
        
            user.setUserName(textUserName.getText());
            String password = String.valueOf(textUserPassword.getPassword());
            String passwordCheck = String.valueOf(textUserCheckPassword.getPassword());
            
            if(password.equals(passwordCheck)){
                user.setUserPassword(password);
                UserDB objUserDB = new UserDB();
                boolean checkingAdd = objUserDB.registerUserDB(user);
                if(checkingAdd == true){
                    JOptionPane.showMessageDialog(null, "User registered");
                    cleanFields();
                    listUsers();
                    
                }
            }else{JOptionPane.showMessageDialog(null, "Password are different, try again"); cleanFields();}           
            
                           
            
        }catch(Exception error){
            JOptionPane.showMessageDialog(null, "View UserRegister() " + error.getMessage());}
    
    }
    
    private void updateUsers(){
            try{
            Users user = new Users();
            
            int userID = Integer.parseInt(textUserID.getText()); 
            user.setUserId(userID);
            user.setUserName(textUserName.getText());
            String password = String.valueOf(textUserPassword.getPassword());
            String passwordCheck = String.valueOf(textUserCheckPassword.getPassword());
            
            if(password.equals(passwordCheck)){
                user.setUserPassword(password);
                UserDB objUserDB = new UserDB();
                boolean checkingAdd = objUserDB.updateUserDB(user);
                if(checkingAdd == true){
                    JOptionPane.showMessageDialog(null, "User registered");
                    cleanFields();
                    listUsers();
                    
                }
            }else{JOptionPane.showMessageDialog(null, "Password are different, try again"); cleanFields();}           
            
                           
            
        }catch(Exception error){
            JOptionPane.showMessageDialog(null, "View UserRegister() " + error.getMessage());}
        
    }
    
    private void listUsers() {
        try {

            UserDB objUserDB = new UserDB();
            DefaultTableModel tableModel = (DefaultTableModel) tableUserList.getModel();
            tableModel.setNumRows(0);

            ArrayList<Users> userList = objUserDB.searchUsers();

            for (int row = 0; row < userList.size(); row++) {

                tableModel.addRow(new Object[]{
                    userList.get(row).getUserId(),
                    userList.get(row).getUserName(),
                    userList.get(row).getUserPassword(),});
            }  
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "View Member Consult" + error.getMessage());}
    }
    
    private void loadUser(){
        int row = tableUserList.getSelectedRow();
        textUserID.setText(tableUserList.getModel().getValueAt(row, 0).toString());
        textUserName.setText(tableUserList.getModel().getValueAt(row, 1).toString());
        textUserPassword.setText(tableUserList.getModel().getValueAt(row, 2).toString());
        
    }
       
    private void cleanFields(){
           textUserName.setText("");
           textUserID.setText("");
           textUserPassword.setText("");
           textUserCheckPassword.setText("");
    }
    
    private void deleteUser() {
        try {
            int userID = Integer.parseInt(textUserID.getText());

            Users user = new Users();

            user.setUserId(userID);

            UserDB objUserDB = new UserDB();
            boolean checkAdding = objUserDB.deleteUser(user);

            if (checkAdding == true) {
                JOptionPane.showMessageDialog(null, "Member Deleted");
                listUsers();
                cleanFields();

            }

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "Button Delete User" + error.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnUserRefresh;
    private javax.swing.JButton btnUserDelete;
    private javax.swing.JButton btnUserLoad;
    private javax.swing.JButton btnUserRegister;
    private javax.swing.JButton btnUserUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tableUserList;
    private javax.swing.JPasswordField textUserCheckPassword;
    private javax.swing.JTextField textUserID;
    private javax.swing.JTextField textUserName;
    private javax.swing.JPasswordField textUserPassword;
    // End of variables declaration//GEN-END:variables
}
